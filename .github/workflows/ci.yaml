name: tests

permissions:
  contents: read

on:
  workflow_dispatch:
  pull_request:
    branches: [main]
  push:
    branches: ["feat/**"]
    tags: ["v*"]

jobs:
  test-go:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Setup Go
        uses: actions/setup-go@3d10edb4c2d9ac9923e94a5ec73fa063078e9234
        with:
          go-version: "1.22"

      - name: Cache Go Modules
        uses: actions/cache@36f1e144e1c8edb0a652766b484448563d8baf46
        with:
          path: |
            ~/.cache/go-build
            /go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install Dependencies
        run: go get ./...

      - name: Install gosec
        run: go install github.com/securego/gosec/v2/cmd/gosec@latest

      - name: Run Tests
        run: go test -v ./...

      - name: Run gosec
        run: gosec ./...

  style-go:
    name: style
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Setup Go
        uses: actions/setup-go@3d10edb4c2d9ac9923e94a5ec73fa063078e9234
        with:
          go-version: "1.22"

      - name: Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Check formatting
        run: test -z $(go fmt ./...)

      - name: Run linter
        run: staticcheck ./...

  containerization-test:
    name: Build and Test Container
    needs: [test-go, style-go]
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@d292784f8f3eacda47060b259a580467b0ba410c
        with:
          dockerfile: Dockerfile

      - name: Build Docker Image For Test
        uses: docker/build-push-action@67a2d409c0a876cbe6b11854e3e25193efe4e62d
        with:
          context: .
          push: false
          tags: ${{ vars.DOCKER_USERNAME }}/hivebox:${{ github.sha }}

      - name: Test Docker container
        run: |
          docker images
          docker run --name hivebox-api -d \
          -p 8282:8282 \
          -e HIVEBOX_VERSION="0.0.1" \
          ${{ vars.DOCKER_USERNAME }}/hivebox:${{ github.sha }}

          echo Testing Image URL using wget
          wget -q -O - 127.0.0.1:8282/version | grep -i version

  containerization-build-push:
    name: Build and push multi-architecture container
    needs: [containerization-test]
    permissions:
      contents: read
      packages: write
    if: |
      github.event_name == 'push' && 
      startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@8e1d5461f02b7886d3c1a774bfbd873650445aa2
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/hivebox
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@327cd5a69de6c009b9ce71bce8395f28e651bf99
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@e5daf5da4ebfd37300852e88eac67cc6ad147f38

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@6a25f988bdfa969e96a38fc9f843ea31e0b5df27

      - name: Build and publish image
        uses: docker/build-push-action@67a2d409c0a876cbe6b11854e3e25193efe4e62d
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
